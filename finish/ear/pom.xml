<?xml version='1.0' encoding='utf-8'?>
<project xmlns="http://maven.apache.org/POM/4.0.0" 
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
         xsi:schemaLocation=
         "http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <!-- tag::basic-config[] -->
  <modelVersion>4.0.0</modelVersion>
  <groupId>io.openliberty.guides</groupId>
  <artifactId>io.openliberty.guides.multimodules.ear</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <!-- tag::packaging[] -->
  <packaging>ear</packaging>
  <!-- end::packaging[] -->
  <!-- end::basic-config[]-->

  <!-- tag::parent-ear[] -->
  <parent>
    <groupId>io.openliberty.guides</groupId>
    <artifactId>guide-maven-multimodules</artifactId>
    <version>0.0.1-SNAPSHOT</version>
  </parent>
  <!-- end::parent-ear[] -->

  <dependencies>
    <!-- web and jar modules as dependencies -->
    <!-- tag::dependencies[] -->
    <!-- tag::java-library-module[] -->
    <dependency>
      <groupId>io.openliberty.guides</groupId>
      <artifactId>io.openliberty.guides.multimodules.jar</artifactId>
      <version>0.0.1-SNAPSHOT</version>
      <type>jar</type>
    </dependency>
    <!-- end::java-library-module[] -->
    <!-- tag::web-module[] -->
    <dependency>
      <groupId>io.openliberty.guides</groupId>
      <artifactId>io.openliberty.guides.multimodules.war</artifactId>
      <version>0.0.1-SNAPSHOT</version>
      <!-- tag::type-war[] -->
      <type>war</type>
      <!-- end::type-war[] -->
    </dependency>
    <!-- end::web-module[] -->
    <!-- end::dependencies[] -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.12</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <!-- tag::maven-ear-plugin[] -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-ear-plugin</artifactId>
        <version>3.0.1</version>
        <configuration>
          <modules>
            <!-- tag::jar-module[] -->
            <jarModule>
              <groupId>io.openliberty.guides</groupId>
              <artifactId>io.openliberty.guides.multimodules.jar</artifactId>
              <uri>/io.openliberty.guides.multimodules.jar-0.0.1-SNAPSHOT.jar</uri>
            </jarModule>
            <!-- end::jar-module[] -->
            <!-- tag::webModule[] -->
            <webModule>
              <groupId>io.openliberty.guides</groupId>
              <artifactId>io.openliberty.guides.multimodules.war</artifactId>
              <uri>/io.openliberty.guides.multimodules.war-0.0.1-SNAPSHOT.war</uri>
              <!-- Set custom context root -->
              <contextRoot>/converter</contextRoot>
            </webModule>
            <!-- end::webModule[] -->
          </modules>
        </configuration>
      </plugin>
      <!-- end::maven-ear-plugin[] -->

      <!-- Enable liberty-maven plugin -->
      <!-- tag::liberty-maven-plugin[] -->
      <plugin>
        <groupId>net.wasdev.wlp.maven.plugins</groupId>
        <artifactId>liberty-maven-plugin</artifactId>
        <configuration>
          <assemblyArtifact>
            <groupId>io.openliberty</groupId>
            <artifactId>openliberty-runtime</artifactId>
            <version>RELEASE</version>
            <type>zip</type>
          </assemblyArtifact>
          <configFile>src/main/liberty/config/server.xml</configFile>
          <packageFile>${package.file}</packageFile>
          <include>${packaging.type}</include>
          <bootstrapProperties>
            <default.http.port>${testServerHttpPort}</default.http.port>
            <default.https.port>${testServerHttpsPort}</default.https.port>
          </bootstrapProperties>
        </configuration>
        <executions>
          <!-- Copy ear to defaultServer/apps -->
          <execution>
            <id>install-apps</id>
            <configuration>
              <looseApplication>true</looseApplication>
              <stripVersion>false</stripVersion>
              <installAppPackages>project</installAppPackages>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- end::liberty-maven-plugin[] -->
      <!-- Since the package type is ear, need to run testCompile to compile the tests -->
      <!-- tag::maven-compiler-plugin[] -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.7.0</version>
        <executions>
          <execution>
            <phase>test-compile</phase>
            <!-- tag::test-compile[] -->
            <goals>
              <goal>testCompile</goal>
            </goals>
            <!-- end::test-compile[] -->
          </execution>
        </executions>
      </plugin>
      <!-- end::maven-compiler-plugin[] -->

      <!-- Plugin to run integration tests -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>3.0.0-M1</version>
        <executions>
          <execution>
            <phase>integration-test</phase>
            <id>integration-test</id>
            <goals>
              <goal>integration-test</goal>
            </goals>
            <configuration>
              <includes>
                <include>**/it/**</include>
              </includes>
              <systemPropertyVariables>
                <liberty.test.port>${testServerHttpPort}</liberty.test.port>
                <running.bluemix>${running.bluemix}</running.bluemix>
                <cf.context.root>${cf.context.root}</cf.context.root>
              </systemPropertyVariables>
            </configuration>
          </execution>
          <execution>
            <id>verify-results</id>
            <goals>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <summaryFile>${project.build.directory}/test-reports/it/failsafe-summary.xml</summaryFile>
          <reportsDirectory>${project.build.directory}/test-reports/it</reportsDirectory>
        </configuration>
      </plugin>
    </plugins>
  </build>

</project>
